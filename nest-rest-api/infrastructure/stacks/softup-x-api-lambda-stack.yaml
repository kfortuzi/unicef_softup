AWSTemplateFormatVersion: 2010-09-09
Description: Softup X api lambda

Parameters:
  # TODO: First step is to create the ArtifactsBucket Stack
  ArtifactsBucket:
    Description: S3 bucket where source code packages are
    Type: String
  LambdaExecutionRole:
    Description: Role that allows lambda to execute
    Type: String
  # TODO: Create VPC stack
  SubnetDId:
    Type: AWS::EC2::Subnet::Id
  SubnetEId:
    Type: AWS::EC2::Subnet::Id
  Version:
    Description: Version of the file on S3
    Type: String
  EnvironmentName:
    Description: Environment name (dev or prod)
    Type: String
  # TODO: Create VPC Security group for database access
  SecurityGroupId:
    Description: Security Group to access database
    Type: AWS::EC2::SecurityGroup::Id
  DBUser:
    Description: The database application account username
    Type: String
  DBPassword:
    Description: The database application account password
    Type: String
    NoEcho: 'true'
  DBHost:
    Description: The database application account host
    Type: String
    NoEcho: 'true'
  DBPort:
    Description: The database port
    Type: String
    Default: 5432
  DBName:
    Description: The database name
    Type: String

Resources:
  Lambda:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref ArtifactsBucket
        S3Key: !Sub '[KEY TO ARTIFACT]'
      Description: Softup X api
      FunctionName: !Sub ${AWS::StackName}
      Handler: dist/handler.default
      MemorySize: 1024
      Role: !Ref LambdaExecutionRole
      Runtime: nodejs18.x
      Timeout: 15
      Environment:
        Variables:
          ENV: !Ref EnvironmentName
          DB_USER: !Ref DBUser
          DB_PASSWORD: !Ref DBPassword
          DB_HOST: !Ref DBHost
          DB_PORT: !Ref DBPort
          DB_NAME: !Ref DBName
      VpcConfig:
        SecurityGroupIds:
          - !Ref SecurityGroupId
        SubnetIds:
          - !Ref SubnetDId
          - !Ref SubnetEId

  ConfigLambdaPermission:
    Type: 'AWS::Lambda::Permission'
    DependsOn:
      - Lambda
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Sub ${AWS::StackName}
      Principal: apigateway.amazonaws.com

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/lambda/${AWS::StackName}'
      RetentionInDays: 14

Outputs:
  LambdaARN:
    Description: Softup X api lambda arn
    Value: !GetAtt Lambda.Arn
